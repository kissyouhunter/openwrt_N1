name: packit new immortalwrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      kernel_versions:
        description: "Input kernel version(s), e.g. 5.4.265 or 5.4.265,5.10.230"
        required: true
        default: "none"
      set_ver:
        description: "VER: 25.01.01 / ..."
        required: false
        default: "25.06.22"
      rootfs_type:
        description: "Select rootfs type"
        required: true
        default: "without_docker"
        type: choice
        options:
          - without_docker
          - with_docker
      upload_firmware:
        description: "whether to upload firmware."
        required: false
        default: "true"
      release_firmware:
        description: "whether to release firmware."
        required: false
        default: "true"

env:
  REPO_URL: https://github.com/unifreq/openwrt_packit
  REPO_BRANCH: master
  # 下面的 ROOTFS_URL 会在 workflow 中动态设置
  KERNEL_URL: https://github.com/kissyouhunter/Openwrt_X86-Openwrt_N1-Armbian_N1/releases/download/kernel_stable
  UPLOAD_BIN_DIR: false
  SERVERCHAN_SCKEY: true
  TZ: Asia/Shanghai

concurrency:
  group: "packit"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      OP_DATE: ${{ github.event.inputs.set_ver }}
      UPLOAD_FIRMWARE: ${{ github.event.inputs.upload_firmware }}
      RELEASE_FIRMWARE: ${{ github.event.inputs.release_firmware }}
    steps:
      - name: Telegram Bot (pre-build notification)
        run: |
          cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c > CPU
          cat /proc/cpuinfo | grep "cpu cores" | uniq >> CPU
          sed -i 's|[[:space:]]||g; s|^.||' CPU && sed -i 's|CPU||g; s|pucores:||' CPU
          CPUNAME="$(awk 'NR==1' CPU)"
          CPUCORES="$(awk 'NR==2' CPU)"
          rm -rf CPU
          if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
            curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=🎉 主人：您正在使用kissyouhunter仓库打包的机器[ ${CPUNAME} 核心数: ${CPUCORES} 线程: $(nproc) ]" https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage
          fi

      - name: Checkout
        uses: actions/checkout@v4

      - name: Installing Requirements & Cleaning Docker Images
        run: |
          docker rmi $(docker images -q) || true
          sudo -E apt-get update
          sudo -E apt-get install subversion -y
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

      - name: Check Space Usage
        if: (!cancelled())
        run: df -hT

      - name: Set ROOTFS_URL and Release Info
        id: setrootfs
        run: |
          if [[ "${{ github.event.inputs.rootfs_type }}" == "with_docker" ]]; then
            echo "ROOTFS_URL=https://github.com/kissyouhunter/openwrt_immortalwrt/releases/download/rootfs_with_docker/immortalwrt-armsr-armv8-generic-rootfs.tar.gz" >> $GITHUB_ENV
            echo "RELEASE_NAME=Openwrt_N1_with_docker" >> $GITHUB_ENV
            echo "RELEASE_TAG=n1_openwrt_with_docker" >> $GITHUB_ENV
          else
            echo "ROOTFS_URL=https://github.com/kissyouhunter/openwrt_immortalwrt/releases/download/rootfs/immortalwrt-armsr-armv8-generic-rootfs.tar.gz" >> $GITHUB_ENV
            echo "RELEASE_NAME=Openwrt_N1_without_docker" >> $GITHUB_ENV
            echo "RELEASE_TAG=n1_openwrt" >> $GITHUB_ENV
          fi

      - name: Download Openwrt_Packit
        id: packit
        run: |
          git clone "$REPO_URL" -b "$REPO_BRANCH" /tmp/packit
          sed -i 's|50000|25000|g' /tmp/packit/files/cpustat
          cd /tmp/packit
          curl -LO "$ROOTFS_URL"
          mv immortalwrt-armsr-armv8-generic-rootfs.tar.gz openwrt-armvirt-64-generic-rootfs.tar.gz 
          cp $GITHUB_WORKSPACE/mk_s905d_n1-docker.sh mk_s905d_n1-docker.sh -v
          cd /tmp/packit/files
          rm -f ./index.html.patches/luci-admin-status-index-html.patch
          cp $GITHUB_WORKSPACE/diy/n1_lede/index/luci-admin-status-index-html.patch ./index.html.patches/luci-admin-status-index-html.patch -v
          rm -f amlogic_model_database.txt
          cp $GITHUB_WORKSPACE/amlogic_model_database.txt amlogic_model_database.txt -v
          rm -f openwrt-install-amlogic
          cp $GITHUB_WORKSPACE/openwrt-install-amlogic openwrt-install-amlogic -v

      - name: Pack OpenWrt
        id: pack
        run: |
          IFS=',' read -ra KERNELS <<< "${{ github.event.inputs.kernel_versions }}"
          for kernel in "${KERNELS[@]}"; do
            kernel=$(echo "$kernel" | xargs)
            if [ -z "$kernel" ]; then
              echo "Skip empty kernel version"
              continue
            fi
            echo "Processing kernel version: $kernel"
            cd /tmp/packit
            curl -LO "$KERNEL_URL/${kernel}.tar.gz"
            tar -xzf "${kernel}.tar.gz"
            mv ./"${kernel}"/*kissyouhunter.tar.gz ./
            rm -rf "${kernel}.tar.gz" "${kernel}"
            rm -f make.env
            cp "$GITHUB_WORKSPACE/make_kernel.env" make.env -v
            sed -i 's|op-kissyouhunter|'${kernel}'-kissyouhunter|g' make.env
            sed -i 's|date|'${OP_DATE}'|g' make.env
            sudo bash mk_s905d_n1-docker.sh
            echo "OP_${kernel}=openwrt_s905d_n1_R${OP_DATE}_k${kernel}-kissyouhunter.img.gz" >> $GITHUB_ENV
          done
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Organize Files
        id: organize
        if: steps.pack.outputs.status == 'success' && !cancelled()
        run: |
          cd /tmp/packit/output
          sudo gzip -9 *
          sudo chmod -R 777 .
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Upload Firmware Artifacts
        if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        run: |
          cd "$FIRMWARE"
          IFS=',' read -ra KERNELS <<< "${{ github.event.inputs.kernel_versions }}"
          for kernel in "${KERNELS[@]}"; do
            kernel=$(echo "$kernel" | xargs)
            artifact_name="openwrt_s905d_n1_R${OP_DATE}_k${kernel}-kissyouhunter.img.gz"
            if [ -f "$artifact_name" ]; then
              echo "Uploading artifact: $artifact_name"
              sudo mkdir -p artifacts
              sudo chmod -R 777 artifacts
              cp "$artifact_name" artifacts/
            fi
          done

      - name: Artifact Upload
        if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        uses: actions/upload-artifact@master
        with:
          name: Firmware_Images
          path: ${{ env.FIRMWARE }}/*.gz

      - name: Upload Firmware to Release
        if: steps.organize.outputs.status == 'success' && env.RELEASE_FIRMWARE == 'true' && !cancelled()
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.REPO_TOKEN }}
          name: ${{ env.RELEASE_NAME }}
          tag: ${{ env.RELEASE_TAG }}
          commit: main
          allowUpdates: true
          repo: Openwrt_X86-Openwrt_N1-Armbian_N1
          body: |
            ## Openwrt_N1:

            * IP: 192.168.2.4 ID: root Password: password

            * 刷入emmc命令： install

            * adguardhome ID: root Password: password wifi password: password

            * N1固件${{ github.event.inputs.rootfs_type == 'with_docker' && '带有docker' || '不带docker' }}。

            * （一键脚本： bash <(curl -s -S -L https://git.io/JMl6C) 或者 curl -Lo ./kiss.sh https://git.io/JMl6C && bash kiss.sh）

            ### 升级方式一：
            * 一键升级命令:（最新的固件已支持在U盘运行的openwrt）
            * 如已刷入本固件，ssh连接n1或ttyd输入update即可(2025.07以后的固件)。
            * 命令一：bash <(curl -Lso- sg0.cc/k)
            * 命令二：bash <(curl -s -S -L https://git.io/update-N1)
            * 建议确保/mnt/mmcblk2p4/或/mnt/sda4分区剩余空间至少1G，使用df -h查看分区情况

            ### 升级方式二：
            * 若需升级emmc内固件，请用[update-N1-openwrt.sh](https://raw.githubusercontent.com/kissyouhunter/Openwrt_X86-Openwrt_N1-Armbian_N1/refs/heads/main/update-N1-openwrt.sh)
            * 将update-N1-openwrt.sh与img文件上传至/mnt/mmcblk2p4分区
            * SSH连接后执行：
              cd /mnt/mmcblk2p4/ && chmod 755 update-N1-openwrt.sh
              ./update-N1-openwrt.sh 文件名.img

            [注：三分区版本的N1只能写入固件到emmc，无法直接升级固件]
          artifacts: ${{ env.FIRMWARE }}/*.gz

      - name: Notify on failure
        if: ${{ failure() }}
        run: |
          curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=我亲爱的😭主人😭：您使用kissyouhunter仓库打包的固件构建失败，请检查日志！" https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage

      - name: Telegram Bot (post-build notification)
        run: |
          if [[ "${SERVERCHAN_SCKEY}" == "true" ]]; then
            curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=我亲爱的✨主人✨：打包完成！固件版本: ${OP_DATE} ，请查收构建产物" https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage
          fi
